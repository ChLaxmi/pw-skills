-- Assignment 2 (SQL Assignment)
-- 1.Retrieve the total number of rental made in the Sakila database
SELECT 
    COUNT(rental_id)
FROM
    rental;

-- OR --

SELECT 
    COUNT(*) AS total_rentals
FROM
    rental;

-- 2. find the average duration (in days) of movies rented from the Sakila database.
SELECT 
    AVG(rental_duration)
FROM
    film;

-- 3. Display the first name and last name of customers in uppercase
SELECT 
    UPPER(CONCAT(first_name, ' ', last_name)) AS Name
FROM
    customer;

-- 4. Extract the month from the rental date and display it alongside the rental ID.
SELECT 
    rental_id, MONTH(rental_date) AS rental_month
FROM
    rental;
    
-- 5. Retrieve the count of rentals for each customer ( display customer ID and the count of rentals).
SELECT 
    customer_id, COUNT(rental_id)
FROM
    rental
GROUP BY customer_id;

-- 6. Find the total revenue generated by each store.
SELECT 
    s.store_id, SUM(p.amount) AS total_revenue
FROM
    store s
        JOIN
    staff st ON s.store_id = st.store_id
        JOIN
    payment p ON st.staff_id = p.staff_id
GROUP BY s.store_id;

-- 7. Display the title of the movie , customers first name , and last name who rented it.
SELECT 
    film.title AS movie_title,
    customer.first_name,
    customer.last_name
FROM
    rental
        JOIN
    inventory ON rental.inventory_id = inventory.inventory_id
        JOIN
    film ON inventory.film_id = film.film_id
        JOIN
    customer ON rental.customer_id = customer.customer_id;


select * from film;
select * from store;

-- 8. Retrieve the names of all actors who have appeared in the film "Gone with the Wind".
SELECT 
    actor.actor_id, actor.first_name, actor.last_name
FROM
    actor
        JOIN
    film_actor ON actor.actor_id = film_actor.actor_id
        JOIN
    film ON film_actor.film_id = film.film_id
WHERE
    film.title = 'Gone with the Wind';
    
-- GROUP BY
-- 1. Determine the total number of rentals for each category of movies.
SELECT 
    c.name AS category_name, COUNT(*) AS rental_count
FROM
    category c
        JOIN
    film_category fc ON c.category_id = fc.category_id
        JOIN
    film f ON fc.film_id = f.film_id
        JOIN
    inventory i ON f.film_id = i.film_id
        JOIN
    rental r ON i.inventory_id = r.inventory_id
GROUP BY c.name
ORDER BY rental_count DESC;

-- 2. Find the average rental rate of movies in each language.
SELECT 
    l.name AS language,
    AVG(f.rental_rate) AS average_rental_rate
FROM 
    language l
JOIN 
    film f ON l.language_id = f.language_id
GROUP BY 
    l.name;

-- 3. Retrieve the customer names along with the total amount they have spent on rentals.
SELECT 
    CONCAT(c.first_name, ' ', c.last_name) AS customer_name,
    SUM(p.amount) AS total_amount_spent
FROM 
    customer c
JOIN 
    payment p ON c.customer_id = p.customer_id
GROUP BY 
    c.customer_id;
    
-- 4. List the titles of movies rented by each customer in a particular city(e.g.,'London').
SELECT 
    c.customer_id,
    CONCAT(c.first_name, ' ', c.last_name) AS customer_name,
    f.title AS movie_title
FROM 
    customer c
JOIN 
    rental r ON c.customer_id = r.customer_id
JOIN 
    inventory i ON r.inventory_id = i.inventory_id
JOIN 
    film f ON i.film_id = f.film_id
JOIN 
    address a ON c.address_id = a.address_id
JOIN 
    city ct ON a.city_id = ct.city_id
WHERE 
    ct.city = 'London'
ORDER BY 
    c.customer_id, f.title;

-- 5. Display the top 5 rented movies along with the number of times they have been rented.
SELECT
    f.film_id,
    f.title AS movie_title,
    COUNT(*) AS rental_count
FROM
    film f
JOIN
    inventory i ON f.film_id = i.film_id
JOIN
    rental r ON i.inventory_id = r.inventory_id
GROUP BY
    f.film_id, f.title
ORDER BY
    rental_count DESC
LIMIT 5;

-- 6. Determine the customers who have rented movies from both stores (store ID 1 and store ID 2).
SELECT
    c.customer_id,
    c.first_name,
    c.last_name
FROM
    customer c
JOIN
    rental r ON c.customer_id = r.customer_id
JOIN
    inventory i ON r.inventory_id = i.inventory_id
JOIN
    store s ON i.store_id = s.store_id
WHERE
    s.store_id IN (1, 2)
GROUP BY
    c.customer_id, c.first_name, c.last_name
HAVING
    COUNT(DISTINCT s.store_id) = 2;


